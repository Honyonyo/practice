포인터변수는 4바이트.

[ 메모리 패딩 ]
 : 메모리 공간에 여백이 생기는 것
>여유공간을 주는 것
cpu는 무조건 4바이트씩 끊어서 처리하기 때문에
int 3개 char 1개를 넣는다고 해도 
13byte가 아니라 16byte가 된다. 배치가 중요.

	[int int char int] 16byte
	[int int char short int] 16byte
	[int int char int short] 20byte

=================================
[ 클래스 ]	객체지향형 OOP언어의 시작~~ 추상화된 언어

	class C붕어빵
	밀가루, 앙금 <-재료 member변수
	굽기, 뒤집기 <-기능 method (member function)

 >> 상속
	부모 클래스에게서 공통된 요소들을 받아서 자유롭게 이용함

	class 부모클래스이름 {}
	class 자식클래스 이름 : public 부모클래스이름{}
	>>자식클래스에서 오버로드해서 
	    void :pointprt(매개변수); <이런식으로 조작적으로 정의 가능

[ 함수 오버로딩 ]
함수 이름이 동일하지만,
	1. 매개변수 타입이 다르다.
	2. return타입이 다르다.
	3. 인자 타입이 틀리다.
	4. 매개변수 개수가 다르다.
위 4가지중 하나 이상이 충족될 때 함수 오버로딩이 발생됨.

[ 생성자와 소멸자 ]
헤더에서 정의한 class를 cpp에서 초기화를 해주는데,
생성자도 오버로딩 할 수 있다.

Class::Method():멤버변수(0){		<<-멤버변수(0)을 이렇게 초기화 할 수도 있다.
	어쩌고저쩌고
	}


[ 정적 할당과 동적 할당 ]
정적할당은 시스템이 끝나는 순간 메모리를 돌려줌.
동적할당은 직접 delete해주지 않는 이상 메모리가 계속 할당되어있음.
상황에 따라 소멸자에 같이 delete 해주는게 편하다.
포인터변수는 nullptr로 초기화..


casting
